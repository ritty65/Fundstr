name: Deploy staging (Develop2 â†’ Hostinger)

on:
  push:
    branches: [Develop2]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable pnpm via Corepack
        run: |
          set -e
          corepack enable
          corepack prepare pnpm@10.16.1 --activate
          pnpm --version

      - name: Install system deps (rsync, ssh)
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client

      - name: Use staging env (optional)
        run: cp .env.staging .env || true

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Build (Quasar PWA)
        run: pnpm quasar build -m pwa

      - name: Enforce .htaccess with cache headers (in built bundle)
        run: |
          cat > dist/pwa/.htaccess <<'EOF'
          <IfModule mod_rewrite.c>
            Options -MultiViews
            RewriteEngine On
            # Never rewrite static assets
            RewriteRule ^assets/ - [L]
            # SPA fallback only if not a real file/dir
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^ index.html [QSA,L]
          </IfModule>

          # Caching policy: HTML & SW no-cache; hashed assets long-lived
          <IfModule mod_headers.c>
            # HTML shell is always fresh
            <FilesMatch "\.(html)$">
              Header set Cache-Control "no-cache, no-store, must-revalidate"
              Header set Pragma "no-cache"
              Header set Expires "0"
            </FilesMatch>
            # Service worker / workbox / manifest must always revalidate
            <FilesMatch "^(sw\.js|workbox.*\.js|manifest\.json)$">
              Header set Cache-Control "no-cache, no-store, must-revalidate"
            </FilesMatch>
            # Versioned static assets can be cached forever
            <FilesMatch "\.(js|mjs|css|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map)$">
              Header set Cache-Control "public, max-age=31536000, immutable"
            </FilesMatch>
          </IfModule>

          <IfModule mod_mime.c>
            AddType application/javascript .js .mjs
            AddType application/wasm .wasm
          </IfModule>
          EOF

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Trust remote host
        run: |
          set -e
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy (rsync to subdomain docroot)
        run: |
          set -e
          which rsync
          rsync --version
          rsync -avz --delete \
            -e "ssh -p ${{ secrets.SSH_PORT }}" \
            dist/pwa/ \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_TARGET_STAGING }}/"

      - name: Smoke test staging
        env:
          BASE_URL: https://staging.fundstr.me
        run: ./scripts/smoke-tests.sh
