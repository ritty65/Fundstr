name: Deploy staging (develop -> Hostinger)

on:
  push:
    branches: [develop]

concurrency:
  group: deploy-staging
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install pnpm to match package.json "packageManager"
      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.7
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Show versions
        run: |
          node -v
          pnpm -v
          node -p "require('./package.json').packageManager"

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build Quasar SPA (staging)
        run: |
          cp .env.staging .env
          pnpm dlx @quasar/cli build -m spa
          test -f dist/spa/index.html || { echo "Build missing dist/spa/index.html"; exit 1; }
          ls -lah dist/spa | sed -n '1,80p'

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Trust Hostinger host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync to Hostinger (staging)
        run: |
          rsync -avz --delete -e "ssh -p ${{ secrets.SSH_PORT }}" \
            dist/spa/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_TARGET_STAGING }}
          rsync -avz --delete -e "ssh -p ${{ secrets.SSH_PORT }}" \
            dist/spa/assets/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_TARGET_STAGING }}assets/

      - name: Drop deploy marker & perms
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            echo deployed \$(date -u) > '${{ secrets.SSH_TARGET_STAGING }}deploy.txt' ;
            find '${{ secrets.SSH_TARGET_STAGING }}' -type d -exec chmod 755 {} \; ;
            find '${{ secrets.SSH_TARGET_STAGING }}' -type f -exec chmod 644 {} \; ;
          "
